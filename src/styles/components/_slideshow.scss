@use "sass:map";
@use "../abstracts/mixins" as *;
@use "../abstracts/variables" as *;

.slideshow {
  position: relative;
  width: 100%;
  border-radius: map.get($border-radius, md);
  overflow: hidden;
  @include flex-center(row);
  @include component-height("slideshow");

  @include respond-to(tablet) {
    border-radius: map.get($border-radius, xxl);
  }

  @include respond-to(desktop) {
    border-radius: map.get($border-radius, xxl);
  }

  &__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: map.get($border-radius, md);

    @include respond-to(tablet) {
      border-radius: map.get($border-radius, xxl);
    }
  }

  &__arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    z-index: 2;
    padding: map.get($spacing-scale, sm);
    @include flex-center(row);
    @include transition(opacity);

    &:hover {
      opacity: $opacity-hover;
    }

    svg {
      @include responsive-size(width, 11.67px, 29px, 46.68px);
      @include responsive-size(height, 19.8px, 50px, 79.2px);
    }

    &--left {
      @include responsive-spacing(
        left,
        map.get($spacing-scale, sm),
        map.get($spacing-scale, md),
        map.get($spacing-scale, md)
      );
    }

    &--right {
      @include responsive-spacing(
        right,
        map.get($spacing-scale, sm),
        map.get($spacing-scale, md),
        map.get($spacing-scale, md)
      );
    }
  }

  &__counter {
    position: absolute;
    bottom: map.get($spacing-scale, md);
    left: 50%;
    transform: translateX(-50%);
    color: $white;
    font-size: 18px;
    font-weight: 500;
    z-index: 2;
    display: none; // Masqué par défaut

    @include respond-to(tablet) {
      display: block; // Affiché à partir de tablet
    }

    @include respond-to(desktop) {
      display: block; // Affiché aussi sur desktop
    }
  }
}
